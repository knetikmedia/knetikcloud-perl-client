=begin comment

Knetik Platform API Documentation Latest

This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com

OpenAPI spec version: Latest
Contact: support@knetik.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end comment

=cut

#
# NOTE: This class is auto generated by Swagger Codegen
# Please update the test cases below to test the API endpoints.
# Ref: https://github.com/swagger-api/swagger-codegen
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::SwaggerClient::StoreApi');

my $api = WWW::SwaggerClient::StoreApi->new();
isa_ok($api, 'WWW::SwaggerClient::StoreApi');

#
# create_item_template_using_post test
#
{
    my $item_template_resource = undef; # replace NULL with a proper value
    my $result = $api->create_item_template_using_post(item_template_resource => $item_template_resource);
}

#
# create_store_item_external_using_post test
#
{
    my $store_item = undef; # replace NULL with a proper value
    my $result = $api->create_store_item_external_using_post(store_item => $store_item);
}

#
# delete_item_template_using_delete test
#
{
    my $id = undef; # replace NULL with a proper value
    my $cascade = undef; # replace NULL with a proper value
    my $result = $api->delete_item_template_using_delete(id => $id, cascade => $cascade);
}

#
# delete_store_item_using_delete1 test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->delete_store_item_using_delete1(id => $id);
}

#
# get_item_template_using_get test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->get_item_template_using_get(id => $id);
}

#
# get_item_templates_using_get test
#
{
    my $size = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $order = undef; # replace NULL with a proper value
    my $result = $api->get_item_templates_using_get(size => $size, page => $page, order => $order);
}

#
# get_store_item_using_get1 test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->get_store_item_using_get1(id => $id);
}

#
# get_store_items_using_get test
#
{
    my $filter_name_search = undef; # replace NULL with a proper value
    my $filter_unique_key = undef; # replace NULL with a proper value
    my $filter_published = undef; # replace NULL with a proper value
    my $filter_displayable = undef; # replace NULL with a proper value
    my $filter_start = undef; # replace NULL with a proper value
    my $filter_end = undef; # replace NULL with a proper value
    my $filter_start_date = undef; # replace NULL with a proper value
    my $filter_stop_date = undef; # replace NULL with a proper value
    my $filter_sku = undef; # replace NULL with a proper value
    my $filter_price = undef; # replace NULL with a proper value
    my $filter_tag = undef; # replace NULL with a proper value
    my $filter_items_by_type = undef; # replace NULL with a proper value
    my $filter_bundled_skus = undef; # replace NULL with a proper value
    my $size = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $order = undef; # replace NULL with a proper value
    my $result = $api->get_store_items_using_get(filter_name_search => $filter_name_search, filter_unique_key => $filter_unique_key, filter_published => $filter_published, filter_displayable => $filter_displayable, filter_start => $filter_start, filter_end => $filter_end, filter_start_date => $filter_start_date, filter_stop_date => $filter_stop_date, filter_sku => $filter_sku, filter_price => $filter_price, filter_tag => $filter_tag, filter_items_by_type => $filter_items_by_type, filter_bundled_skus => $filter_bundled_skus, size => $size, page => $page, order => $order);
}

#
# get_using_get2 test
#
{
    my $store_list_request = undef; # replace NULL with a proper value
    my $result = $api->get_using_get2(store_list_request => $store_list_request);
}

#
# update_item_template_using_put test
#
{
    my $id = undef; # replace NULL with a proper value
    my $item_template_resource = undef; # replace NULL with a proper value
    my $result = $api->update_item_template_using_put(id => $id, item_template_resource => $item_template_resource);
}

#
# update_store_item_external_using_put test
#
{
    my $id = undef; # replace NULL with a proper value
    my $store_item = undef; # replace NULL with a proper value
    my $result = $api->update_store_item_external_using_put(id => $id, store_item => $store_item);
}


1;
