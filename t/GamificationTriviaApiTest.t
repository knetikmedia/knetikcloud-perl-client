=begin comment

Knetik Platform API Documentation latest 

This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com

OpenAPI spec version: latest 
Contact: support@knetik.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end comment

=cut

#
# NOTE: This class is auto generated by Swagger Codegen
# Please update the test cases below to test the API endpoints.
# Ref: https://github.com/swagger-api/swagger-codegen
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::SwaggerClient::GamificationTriviaApi');

my $api = WWW::SwaggerClient::GamificationTriviaApi->new();
isa_ok($api, 'WWW::SwaggerClient::GamificationTriviaApi');

#
# add_answers_using_post test
#
{
    my $question_id = undef; # replace NULL with a proper value
    my $answer = undef; # replace NULL with a proper value
    my $result = $api->add_answers_using_post(question_id => $question_id, answer => $answer);
}

#
# add_tag_using_post test
#
{
    my $id = undef; # replace NULL with a proper value
    my $tag = undef; # replace NULL with a proper value
    my $result = $api->add_tag_using_post(id => $id, tag => $tag);
}

#
# batch_add_tag_using_post test
#
{
    my $tag = undef; # replace NULL with a proper value
    my $filter_search = undef; # replace NULL with a proper value
    my $filter_idset = undef; # replace NULL with a proper value
    my $filter_category = undef; # replace NULL with a proper value
    my $filter_tag = undef; # replace NULL with a proper value
    my $filter_tagset = undef; # replace NULL with a proper value
    my $filter_type = undef; # replace NULL with a proper value
    my $filter_published = undef; # replace NULL with a proper value
    my $filter_import_id = undef; # replace NULL with a proper value
    my $result = $api->batch_add_tag_using_post(tag => $tag, filter_search => $filter_search, filter_idset => $filter_idset, filter_category => $filter_category, filter_tag => $filter_tag, filter_tagset => $filter_tagset, filter_type => $filter_type, filter_published => $filter_published, filter_import_id => $filter_import_id);
}

#
# batch_remove_tag_using_delete test
#
{
    my $tag = undef; # replace NULL with a proper value
    my $filter_search = undef; # replace NULL with a proper value
    my $filter_idset = undef; # replace NULL with a proper value
    my $filter_category = undef; # replace NULL with a proper value
    my $filter_tag = undef; # replace NULL with a proper value
    my $filter_tagset = undef; # replace NULL with a proper value
    my $filter_type = undef; # replace NULL with a proper value
    my $filter_published = undef; # replace NULL with a proper value
    my $filter_import_id = undef; # replace NULL with a proper value
    my $result = $api->batch_remove_tag_using_delete(tag => $tag, filter_search => $filter_search, filter_idset => $filter_idset, filter_category => $filter_category, filter_tag => $filter_tag, filter_tagset => $filter_tagset, filter_type => $filter_type, filter_published => $filter_published, filter_import_id => $filter_import_id);
}

#
# bulk_update_using_put test
#
{
    my $question = undef; # replace NULL with a proper value
    my $filter_search = undef; # replace NULL with a proper value
    my $filter_idset = undef; # replace NULL with a proper value
    my $filter_category = undef; # replace NULL with a proper value
    my $filter_tagset = undef; # replace NULL with a proper value
    my $filter_type = undef; # replace NULL with a proper value
    my $filter_published = undef; # replace NULL with a proper value
    my $filter_import_id = undef; # replace NULL with a proper value
    my $result = $api->bulk_update_using_put(question => $question, filter_search => $filter_search, filter_idset => $filter_idset, filter_category => $filter_category, filter_tagset => $filter_tagset, filter_type => $filter_type, filter_published => $filter_published, filter_import_id => $filter_import_id);
}

#
# count_questions_using_get test
#
{
    my $filter_search = undef; # replace NULL with a proper value
    my $filter_idset = undef; # replace NULL with a proper value
    my $filter_category = undef; # replace NULL with a proper value
    my $filter_tag = undef; # replace NULL with a proper value
    my $filter_tagset = undef; # replace NULL with a proper value
    my $filter_type = undef; # replace NULL with a proper value
    my $filter_published = undef; # replace NULL with a proper value
    my $result = $api->count_questions_using_get(filter_search => $filter_search, filter_idset => $filter_idset, filter_category => $filter_category, filter_tag => $filter_tag, filter_tagset => $filter_tagset, filter_type => $filter_type, filter_published => $filter_published);
}

#
# create_question_template_using_post test
#
{
    my $question_template_resource = undef; # replace NULL with a proper value
    my $result = $api->create_question_template_using_post(question_template_resource => $question_template_resource);
}

#
# create_question_using_post test
#
{
    my $question = undef; # replace NULL with a proper value
    my $result = $api->create_question_using_post(question => $question);
}

#
# create_using_post test
#
{
    my $request = undef; # replace NULL with a proper value
    my $result = $api->create_using_post(request => $request);
}

#
# delete_question_template_using_delete test
#
{
    my $id = undef; # replace NULL with a proper value
    my $cascade = undef; # replace NULL with a proper value
    my $result = $api->delete_question_template_using_delete(id => $id, cascade => $cascade);
}

#
# delete_question_using_delete test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->delete_question_using_delete(id => $id);
}

#
# delete_using_delete test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->delete_using_delete(id => $id);
}

#
# get_answer_using_get test
#
{
    my $question_id = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->get_answer_using_get(question_id => $question_id, id => $id);
}

#
# get_answers_using_get test
#
{
    my $question_id = undef; # replace NULL with a proper value
    my $result = $api->get_answers_using_get(question_id => $question_id);
}

#
# get_list_using_get1 test
#
{
    my $filter_vendor = undef; # replace NULL with a proper value
    my $filter_category = undef; # replace NULL with a proper value
    my $filter_name = undef; # replace NULL with a proper value
    my $filter_status = undef; # replace NULL with a proper value
    my $size = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $order = undef; # replace NULL with a proper value
    my $result = $api->get_list_using_get1(filter_vendor => $filter_vendor, filter_category => $filter_category, filter_name => $filter_name, filter_status => $filter_status, size => $size, page => $page, order => $order);
}

#
# get_question_template_using_get test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->get_question_template_using_get(id => $id);
}

#
# get_question_templates_using_get test
#
{
    my $size = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $order = undef; # replace NULL with a proper value
    my $result = $api->get_question_templates_using_get(size => $size, page => $page, order => $order);
}

#
# get_question_using_get test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->get_question_using_get(id => $id);
}

#
# get_questions_delta_using_get test
#
{
    my $since = undef; # replace NULL with a proper value
    my $result = $api->get_questions_delta_using_get(since => $since);
}

#
# get_questions_using_get test
#
{
    my $size = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $order = undef; # replace NULL with a proper value
    my $filter_search = undef; # replace NULL with a proper value
    my $filter_idset = undef; # replace NULL with a proper value
    my $filter_category = undef; # replace NULL with a proper value
    my $filter_tagset = undef; # replace NULL with a proper value
    my $filter_type = undef; # replace NULL with a proper value
    my $filter_published = undef; # replace NULL with a proper value
    my $filter_import_id = undef; # replace NULL with a proper value
    my $result = $api->get_questions_using_get(size => $size, page => $page, order => $order, filter_search => $filter_search, filter_idset => $filter_idset, filter_category => $filter_category, filter_tagset => $filter_tagset, filter_type => $filter_type, filter_published => $filter_published, filter_import_id => $filter_import_id);
}

#
# get_tags_using_get1 test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->get_tags_using_get1(id => $id);
}

#
# get_tags_using_get2 test
#
{
    my $filter_search = undef; # replace NULL with a proper value
    my $filter_category = undef; # replace NULL with a proper value
    my $filter_import_id = undef; # replace NULL with a proper value
    my $result = $api->get_tags_using_get2(filter_search => $filter_search, filter_category => $filter_category, filter_import_id => $filter_import_id);
}

#
# get_using_get test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->get_using_get(id => $id);
}

#
# remove_answers_using_delete test
#
{
    my $question_id = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->remove_answers_using_delete(question_id => $question_id, id => $id);
}

#
# remove_tag_using_delete test
#
{
    my $id = undef; # replace NULL with a proper value
    my $tag = undef; # replace NULL with a proper value
    my $result = $api->remove_tag_using_delete(id => $id, tag => $tag);
}

#
# start_process_using_post test
#
{
    my $id = undef; # replace NULL with a proper value
    my $publish_now = undef; # replace NULL with a proper value
    my $result = $api->start_process_using_post(id => $id, publish_now => $publish_now);
}

#
# update_answer_using_put test
#
{
    my $question_id = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $answer = undef; # replace NULL with a proper value
    my $result = $api->update_answer_using_put(question_id => $question_id, id => $id, answer => $answer);
}

#
# update_question_template_using_put test
#
{
    my $id = undef; # replace NULL with a proper value
    my $question_template_resource = undef; # replace NULL with a proper value
    my $result = $api->update_question_template_using_put(id => $id, question_template_resource => $question_template_resource);
}

#
# update_question_using_put test
#
{
    my $id = undef; # replace NULL with a proper value
    my $question = undef; # replace NULL with a proper value
    my $result = $api->update_question_using_put(id => $id, question => $question);
}

#
# update_using_put test
#
{
    my $id = undef; # replace NULL with a proper value
    my $request = undef; # replace NULL with a proper value
    my $result = $api->update_using_put(id => $id, request => $request);
}


1;
