=begin comment

Knetik Platform API Documentation latest 

This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com

OpenAPI spec version: latest 
Contact: support@knetik.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end comment

=cut

#
# NOTE: This class is auto generated by Swagger Codegen
# Please update the test cases below to test the API endpoints.
# Ref: https://github.com/swagger-api/swagger-codegen
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::SwaggerClient::UsersInventoryApi');

my $api = WWW::SwaggerClient::UsersInventoryApi->new();
isa_ok($api, 'WWW::SwaggerClient::UsersInventoryApi');

#
# add_item_to_user_inventory test
#
{
    my $id = undef; # replace NULL with a proper value
    my $user_inventory_add_request = undef; # replace NULL with a proper value
    my $result = $api->add_item_to_user_inventory(id => $id, user_inventory_add_request => $user_inventory_add_request);
}

#
# check_user_entitlement_item test
#
{
    my $user_id = undef; # replace NULL with a proper value
    my $item_id = undef; # replace NULL with a proper value
    my $sku = undef; # replace NULL with a proper value
    my $result = $api->check_user_entitlement_item(user_id => $user_id, item_id => $item_id, sku => $sku);
}

#
# create_entitlement_item test
#
{
    my $cascade = undef; # replace NULL with a proper value
    my $entitlement_item = undef; # replace NULL with a proper value
    my $result = $api->create_entitlement_item(cascade => $cascade, entitlement_item => $entitlement_item);
}

#
# create_entitlement_template test
#
{
    my $template = undef; # replace NULL with a proper value
    my $result = $api->create_entitlement_template(template => $template);
}

#
# delete_entitlement_item test
#
{
    my $entitlement_id = undef; # replace NULL with a proper value
    my $result = $api->delete_entitlement_item(entitlement_id => $entitlement_id);
}

#
# delete_entitlement_template test
#
{
    my $id = undef; # replace NULL with a proper value
    my $cascade = undef; # replace NULL with a proper value
    my $result = $api->delete_entitlement_template(id => $id, cascade => $cascade);
}

#
# get_entitlement_item test
#
{
    my $entitlement_id = undef; # replace NULL with a proper value
    my $result = $api->get_entitlement_item(entitlement_id => $entitlement_id);
}

#
# get_entitlement_items test
#
{
    my $size = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $order = undef; # replace NULL with a proper value
    my $result = $api->get_entitlement_items(size => $size, page => $page, order => $order);
}

#
# get_entitlement_template test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->get_entitlement_template(id => $id);
}

#
# get_entitlement_templates test
#
{
    my $size = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $order = undef; # replace NULL with a proper value
    my $result = $api->get_entitlement_templates(size => $size, page => $page, order => $order);
}

#
# get_user_inventories test
#
{
    my $id = undef; # replace NULL with a proper value
    my $inactive = undef; # replace NULL with a proper value
    my $size = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $filter_item_name = undef; # replace NULL with a proper value
    my $filter_item_id = undef; # replace NULL with a proper value
    my $filter_username = undef; # replace NULL with a proper value
    my $filter_group = undef; # replace NULL with a proper value
    my $filter_date = undef; # replace NULL with a proper value
    my $result = $api->get_user_inventories(id => $id, inactive => $inactive, size => $size, page => $page, filter_item_name => $filter_item_name, filter_item_id => $filter_item_id, filter_username => $filter_username, filter_group => $filter_group, filter_date => $filter_date);
}

#
# get_user_inventory test
#
{
    my $user_id = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $result = $api->get_user_inventory(user_id => $user_id, id => $id);
}

#
# get_user_inventory_log test
#
{
    my $user_id = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $size = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $result = $api->get_user_inventory_log(user_id => $user_id, id => $id, size => $size, page => $page);
}

#
# get_users_inventory test
#
{
    my $inactive = undef; # replace NULL with a proper value
    my $size = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $filter_item_name = undef; # replace NULL with a proper value
    my $filter_item_id = undef; # replace NULL with a proper value
    my $filter_username = undef; # replace NULL with a proper value
    my $filter_group = undef; # replace NULL with a proper value
    my $filter_date = undef; # replace NULL with a proper value
    my $result = $api->get_users_inventory(inactive => $inactive, size => $size, page => $page, filter_item_name => $filter_item_name, filter_item_id => $filter_item_id, filter_username => $filter_username, filter_group => $filter_group, filter_date => $filter_date);
}

#
# grant_user_entitlement test
#
{
    my $user_id = undef; # replace NULL with a proper value
    my $grant_request = undef; # replace NULL with a proper value
    my $result = $api->grant_user_entitlement(user_id => $user_id, grant_request => $grant_request);
}

#
# update_entitlement_item test
#
{
    my $entitlement_id = undef; # replace NULL with a proper value
    my $cascade = undef; # replace NULL with a proper value
    my $entitlement_item = undef; # replace NULL with a proper value
    my $result = $api->update_entitlement_item(entitlement_id => $entitlement_id, cascade => $cascade, entitlement_item => $entitlement_item);
}

#
# update_entitlement_template test
#
{
    my $id = undef; # replace NULL with a proper value
    my $template = undef; # replace NULL with a proper value
    my $result = $api->update_entitlement_template(id => $id, template => $template);
}

#
# update_user_inventory_behavior_data test
#
{
    my $user_id = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $data = undef; # replace NULL with a proper value
    my $result = $api->update_user_inventory_behavior_data(user_id => $user_id, id => $id, data => $data);
}

#
# update_user_inventory_expires test
#
{
    my $user_id = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $timestamp = undef; # replace NULL with a proper value
    my $result = $api->update_user_inventory_expires(user_id => $user_id, id => $id, timestamp => $timestamp);
}

#
# update_user_inventory_status test
#
{
    my $user_id = undef; # replace NULL with a proper value
    my $id = undef; # replace NULL with a proper value
    my $inventory_status = undef; # replace NULL with a proper value
    my $result = $api->update_user_inventory_status(user_id => $user_id, id => $id, inventory_status => $inventory_status);
}

#
# use_user_entitlement_item test
#
{
    my $user_id = undef; # replace NULL with a proper value
    my $item_id = undef; # replace NULL with a proper value
    my $sku = undef; # replace NULL with a proper value
    my $info = undef; # replace NULL with a proper value
    my $result = $api->use_user_entitlement_item(user_id => $user_id, item_id => $item_id, sku => $sku, info => $info);
}


1;
