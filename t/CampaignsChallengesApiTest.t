=begin comment

Knetik Platform API Documentation Latest

This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com

OpenAPI spec version: Latest
Contact: support@knetik.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end comment

=cut

#
# NOTE: This class is auto generated by Swagger Codegen
# Please update the test cases below to test the API endpoints.
# Ref: https://github.com/swagger-api/swagger-codegen
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::SwaggerClient::CampaignsChallengesApi');

my $api = WWW::SwaggerClient::CampaignsChallengesApi->new();
isa_ok($api, 'WWW::SwaggerClient::CampaignsChallengesApi');

#
# create_challenge_activity_using_post test
#
{
    my $challenge_id = undef; # replace NULL with a proper value
    my $challenge_activity_resource = undef; # replace NULL with a proper value
    my $validate_settings = undef; # replace NULL with a proper value
    my $result = $api->create_challenge_activity_using_post(challenge_id => $challenge_id, challenge_activity_resource => $challenge_activity_resource, validate_settings => $validate_settings);
}

#
# create_challenge_template_using_post test
#
{
    my $challenge_template_resource = undef; # replace NULL with a proper value
    my $result = $api->create_challenge_template_using_post(challenge_template_resource => $challenge_template_resource);
}

#
# create_challenge_using_post test
#
{
    my $challenge_resource = undef; # replace NULL with a proper value
    my $result = $api->create_challenge_using_post(challenge_resource => $challenge_resource);
}

#
# delete_challenge_activity_using_delete test
#
{
    my $activity_id = undef; # replace NULL with a proper value
    my $challenge_id = undef; # replace NULL with a proper value
    my $result = $api->delete_challenge_activity_using_delete(activity_id => $activity_id, challenge_id => $challenge_id);
}

#
# delete_challenge_event_using_delete test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->delete_challenge_event_using_delete(id => $id);
}

#
# delete_challenge_template_using_delete test
#
{
    my $id = undef; # replace NULL with a proper value
    my $cascade = undef; # replace NULL with a proper value
    my $result = $api->delete_challenge_template_using_delete(id => $id, cascade => $cascade);
}

#
# delete_challenge_using_delete test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->delete_challenge_using_delete(id => $id);
}

#
# get_activities_using_get1 test
#
{
    my $challenge_id = undef; # replace NULL with a proper value
    my $size = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $order = undef; # replace NULL with a proper value
    my $result = $api->get_activities_using_get1(challenge_id => $challenge_id, size => $size, page => $page, order => $order);
}

#
# get_challenge_activity_using_get test
#
{
    my $activity_id = undef; # replace NULL with a proper value
    my $result = $api->get_challenge_activity_using_get(activity_id => $activity_id);
}

#
# get_challenge_event_using_get test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->get_challenge_event_using_get(id => $id);
}

#
# get_challenge_eventss_using_get test
#
{
    my $filter_start_date = undef; # replace NULL with a proper value
    my $filter_end_date = undef; # replace NULL with a proper value
    my $filter_campaigns = undef; # replace NULL with a proper value
    my $filter_challenge = undef; # replace NULL with a proper value
    my $size = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $order = undef; # replace NULL with a proper value
    my $result = $api->get_challenge_eventss_using_get(filter_start_date => $filter_start_date, filter_end_date => $filter_end_date, filter_campaigns => $filter_campaigns, filter_challenge => $filter_challenge, size => $size, page => $page, order => $order);
}

#
# get_challenge_template_using_get test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->get_challenge_template_using_get(id => $id);
}

#
# get_challenge_templates_using_get test
#
{
    my $size = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $order = undef; # replace NULL with a proper value
    my $result = $api->get_challenge_templates_using_get(size => $size, page => $page, order => $order);
}

#
# get_challenge_using_get test
#
{
    my $id = undef; # replace NULL with a proper value
    my $result = $api->get_challenge_using_get(id => $id);
}

#
# get_challenges_using_get1 test
#
{
    my $filter_template = undef; # replace NULL with a proper value
    my $filter_active_campaign = undef; # replace NULL with a proper value
    my $result = $api->get_challenges_using_get1(filter_template => $filter_template, filter_active_campaign => $filter_active_campaign);
}

#
# update_challenge_activity_using_put test
#
{
    my $activity_id = undef; # replace NULL with a proper value
    my $challenge_id = undef; # replace NULL with a proper value
    my $challenge_activity_resource = undef; # replace NULL with a proper value
    my $result = $api->update_challenge_activity_using_put(activity_id => $activity_id, challenge_id => $challenge_id, challenge_activity_resource => $challenge_activity_resource);
}

#
# update_challenge_template_using_put test
#
{
    my $id = undef; # replace NULL with a proper value
    my $challenge_template_resource = undef; # replace NULL with a proper value
    my $result = $api->update_challenge_template_using_put(id => $id, challenge_template_resource => $challenge_template_resource);
}

#
# update_challenge_using_put test
#
{
    my $id = undef; # replace NULL with a proper value
    my $challenge_resource = undef; # replace NULL with a proper value
    my $result = $api->update_challenge_using_put(id => $id, challenge_resource => $challenge_resource);
}


1;
