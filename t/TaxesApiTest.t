=begin comment

Knetik Platform API Documentation latest 

This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com

OpenAPI spec version: latest 
Contact: support@knetik.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end comment

=cut

#
# NOTE: This class is auto generated by Swagger Codegen
# Please update the test cases below to test the API endpoints.
# Ref: https://github.com/swagger-api/swagger-codegen
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::SwaggerClient::TaxesApi');

my $api = WWW::SwaggerClient::TaxesApi->new();
isa_ok($api, 'WWW::SwaggerClient::TaxesApi');

#
# create_country_tax test
#
{
    my $tax_resource = undef; # replace NULL with a proper value
    my $result = $api->create_country_tax(tax_resource => $tax_resource);
}

#
# create_state_tax test
#
{
    my $country_code_iso3 = undef; # replace NULL with a proper value
    my $tax_resource = undef; # replace NULL with a proper value
    my $result = $api->create_state_tax(country_code_iso3 => $country_code_iso3, tax_resource => $tax_resource);
}

#
# delete_country_tax test
#
{
    my $country_code_iso3 = undef; # replace NULL with a proper value
    my $result = $api->delete_country_tax(country_code_iso3 => $country_code_iso3);
}

#
# delete_state_tax test
#
{
    my $country_code_iso3 = undef; # replace NULL with a proper value
    my $state_code = undef; # replace NULL with a proper value
    my $result = $api->delete_state_tax(country_code_iso3 => $country_code_iso3, state_code => $state_code);
}

#
# get_country_tax test
#
{
    my $country_code_iso3 = undef; # replace NULL with a proper value
    my $result = $api->get_country_tax(country_code_iso3 => $country_code_iso3);
}

#
# get_country_taxes test
#
{
    my $size = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $order = undef; # replace NULL with a proper value
    my $result = $api->get_country_taxes(size => $size, page => $page, order => $order);
}

#
# get_state_tax test
#
{
    my $country_code_iso3 = undef; # replace NULL with a proper value
    my $state_code = undef; # replace NULL with a proper value
    my $result = $api->get_state_tax(country_code_iso3 => $country_code_iso3, state_code => $state_code);
}

#
# get_state_taxes_for_countries test
#
{
    my $size = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $order = undef; # replace NULL with a proper value
    my $result = $api->get_state_taxes_for_countries(size => $size, page => $page, order => $order);
}

#
# get_state_taxes_for_country test
#
{
    my $country_code_iso3 = undef; # replace NULL with a proper value
    my $size = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $order = undef; # replace NULL with a proper value
    my $result = $api->get_state_taxes_for_country(country_code_iso3 => $country_code_iso3, size => $size, page => $page, order => $order);
}

#
# update_country_tax test
#
{
    my $country_code_iso3 = undef; # replace NULL with a proper value
    my $tax_resource = undef; # replace NULL with a proper value
    my $result = $api->update_country_tax(country_code_iso3 => $country_code_iso3, tax_resource => $tax_resource);
}

#
# update_state_tax test
#
{
    my $country_code_iso3 = undef; # replace NULL with a proper value
    my $state_code = undef; # replace NULL with a proper value
    my $tax_resource = undef; # replace NULL with a proper value
    my $result = $api->update_state_tax(country_code_iso3 => $country_code_iso3, state_code => $state_code, tax_resource => $tax_resource);
}


1;
